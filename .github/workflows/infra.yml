name: infra-ci
on: [push, pull_request]

env:
  TF_DIR: ./terraform   # <-- cambia a ./tf si asÃ­ se llama tu carpeta

jobs:
  tf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform fmt (lint)
        run: |
          echo "" > /tmp/empty.tfrc
          TF_CLI_CONFIG_FILE=/tmp/empty.tfrc terraform -chdir=${{ env.TF_DIR }} fmt -check -diff -recursive

      - name: Terraform CLI config (cache + direct)
        run: |
          mkdir -p "$HOME/.terraform.d/plugin-cache"
          cat > "$HOME/.terraformrc" <<RC
          provider_installation {
            filesystem_mirror { path = "$HOME/.terraform.d/plugin-cache" }
            direct {}
          }
          RC
          echo "TF_PLUGIN_CACHE_DIR=$HOME/.terraform.d/plugin-cache" >> "$GITHUB_ENV"

      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-tf-prov-${{ hashFiles(format('{0}/.terraform.lock.hcl', env.TF_DIR)) }}
          restore-keys: |
            ${{ runner.os }}-tf-prov-

      - name: Debug tf module files
        run: |
          ls -la ${{ env.TF_DIR }}
          sed -n '1,160p' ${{ env.TF_DIR }}/provider.tf || true
          sed -n '1,120p' ${{ env.TF_DIR }}/variables.tf || true

      - name: Terraform init (no backend)
        run: terraform -chdir=${{ env.TF_DIR }} init -backend=false -input=false

      - name: Terraform validate
        run: terraform -chdir=${{ env.TF_DIR }} validate -no-color

      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init
          tflint ${{ env.TF_DIR }} || true

      - name: tfsec (IaC security scan)
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ${{ env.TF_DIR }}
          additional_args: --no-color
        continue-on-error: true

      - name: Terraform plan
        run: terraform -chdir=${{ env.TF_DIR }} plan -out plan.bin

      - name: Upload plan
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan
          path: ${{ env.TF_DIR }}/plan.bin
